// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String    @id @default(cuid())
  name            String?   // Optional field for the user's name
  email           String?   @unique
  emailVerified   DateTime? // Tracks when the user's email was verified
  hashedPassword  String? // For credentials-based authentication
  image           String?   // Optional field for the user's avatar
  accounts        Account[]
  sessions        Session[]
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  // Optional field for refresh tokens
  access_token       String?  // Optional field for access tokens
  expires_at         Int?     // Optional field for token expiry
  token_type         String?  // Optional field for token type
  scope              String?  // Optional field for token scopes
  id_token           String?  // Optional field for OpenID Connect ID tokens
  session_state      String?  // Optional field for OIDC session state
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
